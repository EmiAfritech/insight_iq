# Generated by Django 4.2.8 on 2025-07-06 20:00

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("tenants", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Analysis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("descriptive", "Descriptive Statistics"),
                            ("correlation", "Correlation Analysis"),
                            ("trend", "Trend Analysis"),
                            ("predictive", "Predictive Analysis"),
                            ("clustering", "Clustering Analysis"),
                            ("anomaly", "Anomaly Detection"),
                            ("custom", "Custom Analysis"),
                        ],
                        max_length=20,
                    ),
                ),
                ("configuration", models.JSONField(default=dict)),
                ("selected_columns", models.JSONField(default=list)),
                ("results", models.JSONField(default=dict)),
                ("charts", models.JSONField(default=list)),
                ("insights", models.JSONField(default=list)),
                ("ai_summary", models.TextField(blank=True)),
                ("ai_insights", models.JSONField(default=list)),
                ("ai_recommendations", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Queued"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="queued",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_analyses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_analysis",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Chart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "chart_type",
                    models.CharField(
                        choices=[
                            ("line", "Line Chart"),
                            ("bar", "Bar Chart"),
                            ("pie", "Pie Chart"),
                            ("scatter", "Scatter Plot"),
                            ("heatmap", "Heatmap"),
                            ("histogram", "Histogram"),
                            ("box", "Box Plot"),
                            ("area", "Area Chart"),
                            ("gauge", "Gauge Chart"),
                        ],
                        max_length=20,
                    ),
                ),
                ("data", models.JSONField(default=dict)),
                ("configuration", models.JSONField(default=dict)),
                ("width", models.IntegerField(default=800)),
                ("height", models.IntegerField(default=600)),
                ("is_interactive", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chart_objects",
                        to="analytics.analysis",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="charts",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_chart",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Insight",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "insight_type",
                    models.CharField(
                        choices=[
                            ("trend", "Trend Insight"),
                            ("anomaly", "Anomaly Detection"),
                            ("correlation", "Correlation Finding"),
                            ("prediction", "Prediction"),
                            ("recommendation", "Recommendation"),
                            ("summary", "Summary"),
                        ],
                        max_length=20,
                    ),
                ),
                ("confidence_score", models.FloatField(default=0.0)),
                ("importance_score", models.FloatField(default=0.0)),
                ("supporting_data", models.JSONField(default=dict)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_hidden", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analysis",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insight_objects",
                        to="analytics.analysis",
                    ),
                ),
                (
                    "related_charts",
                    models.ManyToManyField(blank=True, to="analytics.chart"),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insights",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="verified_insights",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_insight",
                "ordering": ["-importance_score", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DataSet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "file",
                    models.FileField(
                        upload_to="datasets/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["csv", "xlsx", "xls", "json"]
                            )
                        ],
                    ),
                ),
                ("file_size", models.BigIntegerField()),
                ("file_type", models.CharField(max_length=10)),
                ("total_rows", models.IntegerField(default=0)),
                ("total_columns", models.IntegerField(default=0)),
                ("columns_info", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("processing", "Processing"),
                            ("ready", "Ready"),
                            ("error", "Error"),
                        ],
                        default="processing",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_analyzed", models.DateTimeField(blank=True, null=True)),
                ("is_public", models.BooleanField(default=False)),
                ("tags", models.JSONField(default=list)),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="datasets",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_datasets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_dataset",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("descriptive", "Descriptive Statistics"),
                            ("correlation", "Correlation Analysis"),
                            ("trend", "Trend Analysis"),
                            ("predictive", "Predictive Analysis"),
                            ("clustering", "Clustering Analysis"),
                            ("anomaly", "Anomaly Detection"),
                            ("custom", "Custom Analysis"),
                        ],
                        max_length=20,
                    ),
                ),
                ("configuration", models.JSONField(default=dict)),
                ("is_public", models.BooleanField(default=False)),
                ("is_system_template", models.BooleanField(default=False)),
                ("usage_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_templates",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_analysistemplate",
                "ordering": ["-usage_count", "-created_at"],
            },
        ),
        migrations.AddField(
            model_name="analysis",
            name="dataset",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analyses",
                to="analytics.dataset",
            ),
        ),
        migrations.AddField(
            model_name="analysis",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="analyses",
                to="tenants.tenant",
            ),
        ),
    ]
