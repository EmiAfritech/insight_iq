# Generated by Django 4.2.8 on 2025-07-06 20:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DataSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("database", "Database"),
                            ("api", "API"),
                            ("file", "File"),
                            ("cloud", "Cloud Storage"),
                            ("erp", "ERP System"),
                            ("crm", "CRM System"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("connection_string", models.TextField(blank=True)),
                ("host", models.CharField(blank=True, max_length=255)),
                ("port", models.IntegerField(blank=True, null=True)),
                ("database_name", models.CharField(blank=True, max_length=255)),
                ("username", models.CharField(blank=True, max_length=255)),
                ("password", models.CharField(blank=True, max_length=255)),
                ("api_url", models.URLField(blank=True)),
                ("api_key", models.CharField(blank=True, max_length=500)),
                ("api_headers", models.JSONField(default=dict)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("access_token", models.CharField(blank=True, max_length=500)),
                ("configuration", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("testing", "Testing"),
                        ],
                        default="inactive",
                        max_length=20,
                    ),
                ),
                ("last_tested", models.DateTimeField(blank=True, null=True)),
                ("last_error", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "data_sources_datasource",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DataSourceTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "source_type",
                    models.CharField(
                        choices=[
                            ("database", "Database"),
                            ("api", "API"),
                            ("file", "File"),
                            ("cloud", "Cloud Storage"),
                            ("erp", "ERP System"),
                            ("crm", "CRM System"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("configuration_template", models.JSONField(default=dict)),
                ("connection_template", models.JSONField(default=dict)),
                (
                    "system_type",
                    models.CharField(
                        choices=[
                            ("mysql", "MySQL"),
                            ("postgresql", "PostgreSQL"),
                            ("mssql", "Microsoft SQL Server"),
                            ("oracle", "Oracle"),
                            ("sqlite", "SQLite"),
                            ("mongodb", "MongoDB"),
                            ("salesforce", "Salesforce"),
                            ("hubspot", "HubSpot"),
                            ("quickbooks", "QuickBooks"),
                            ("xero", "Xero"),
                            ("google_analytics", "Google Analytics"),
                            ("facebook_ads", "Facebook Ads"),
                            ("aws_s3", "AWS S3"),
                            ("google_sheets", "Google Sheets"),
                            ("custom", "Custom"),
                        ],
                        default="custom",
                        max_length=30,
                    ),
                ),
                ("is_system_template", models.BooleanField(default=False)),
                ("usage_count", models.IntegerField(default=0)),
                ("setup_instructions", models.TextField(blank=True)),
                ("required_fields", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "data_sources_datasourcetemplate",
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="DataPull",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.TextField(blank=True)),
                ("parameters", models.JSONField(default=dict)),
                ("records_count", models.IntegerField(default=0)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size", models.BigIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pulls",
                        to="data_sources.datasource",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "data_sources_datapull",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DataSourceConnection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("connected_at", models.DateTimeField(auto_now_add=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("usage_count", models.IntegerField(default=0)),
                ("total_records_pulled", models.BigIntegerField(default=0)),
                ("last_pull_count", models.IntegerField(default=0)),
                ("last_pull_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "data_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections",
                        to="data_sources.datasource",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "data_sources_datasourceconnection",
                "unique_together": {("data_source", "user")},
            },
        ),
    ]
